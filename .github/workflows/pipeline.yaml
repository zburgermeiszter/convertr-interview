---
name: 'Build and deploy ðŸš€'

on:
  push:
  pull_request:
    branches:
      - main

permissions:
  id-token: write # for OIDC
  pull-requests: write # For `terraform plan`` comments on PRs

env:
  TF_LOG: ERROR
  TF_INPUT: false

jobs:
  build:
    name: Build Lambda
    environment: dev
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: lambda
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: List files after checkout
        run: tree

      - name: Install asdf & tools
        uses: asdf-vm/actions/install@v4

      - name: Bun install
        run: bun ci

      - name: Bun audit
        run: bun audit

      - name: Run TypeScript type check
        run: bun run typecheck

      - name: Build
        run: bun run build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lambda-bundle
          path: lambda/dist

  terraform-check:
    name: Run tflint, tfsec, terraform validate
    needs: build
    environment: dev
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: List files after checkout
        run: tree

      - name: Install asdf & tools
        uses: asdf-vm/actions/install@v4

      - name: Terraform validate
        run: terraform validate

      - name: Terraform format check
        run: terraform fmt -check

      - name: tflint
        run: tflint

      - name: tfsec
        run: tfsec --minimum-severity=HIGH

  terraform-plan-apply:
    name: Run terraform plan/apply
    needs: terraform-check
    environment: dev
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/environments/dev
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Restore build artifacts
        uses: actions/download-artifact@v5
        with:
          name: lambda-bundle
          path: lambda/dist

      - name: List files after checkout
        run: tree

      - name: Install asdf & tools
        uses: asdf-vm/actions/install@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ vars.ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Check caller identity
        run: aws sts get-caller-identity

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color

      - name: Update Pull Request
        uses: actions/github-script@v8
        if: github.event.pull_request.base.ref == 'master'
        with:
          github-token: ${{ github.token }}
          script: |
            const planTitle = `Terraform Plan ðŸ“–`
            const output = `#### ${planTitle}\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${{ steps.plan.outputs.stdout }}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}*
            *Action: \`${{ github.event_name }}\`*`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const botComment = comments.find(comment =>
              comment.user.type === 'Bot'
              && comment.body.includes(planTitle)
            );
            if (botComment) {
              github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
              });
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply
